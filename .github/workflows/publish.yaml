name: Publish
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  build:
    name: Publish
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: ubuntu

          - build: macos-x64
            os: macOS-14
            target: macos-x64

          - build: macos-arm
            os: macOS-14-arm64
            target: macos-arm

          - build: windows-msvc
            os: windows-latest
            target: windows-x64

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5

      - run: uv sync

      - run: uv run installer.py

#      - uses: actions/upload-artifact@v4
#        with:
#          name: chatbox-${{matrix.target}}
#          path: dist

      - shell: bash
        run: |
          ls -allh dist/
          tree dist/

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="app"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - uses: actions/attest-build-provenance@v1
        with:
          subject-path: ${{ env.ASSET }}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET }}
